{"version":3,"sources":["registerServiceWorker.js","models/MemoryModel.js","models/AnswerModel.js","views/AnswerView.js","views/MatchView.js","controllers/Flow.js","AppRoutes.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","MemoryModel","obj","this","type","text","prototype","toString","result","format","AnswerModel","answer","styles","container","width","display","textField","height","marginLeft","marginRight","flex","Component","dataSource","refs_Key","refs_Value","tempType","table","margin","item","formControl","minWidth","MemoryView","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","itemType","showDialog","onFinishMemroyAction","e","keyCode","data","i","length","textInput_Key","textInput_Value","key","current","value","msg","alert","v","indexOf","push","onFinish","addMatch","React","createRef","Date","valueOf","react_default","a","createElement","style","TextField","id","label","placeholder","variant","inputRef","autoFocus","onKeyUp","setState","addItem","deleteItem","pop","handleSelectItem","name","event","target","handleClose","changeItemType","inputLabel","Card","CardHeader","avatar","Avatar","title","action","FormControl","InputLabel","ref","htmlFor","Select","native","onChange","input","OutlinedInput","labelWidth","IconButton","aria-label","onClick","Add_default","Remove_default","Dialog","fullScreen","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","background","flexDirection","marginTop","textAlign","fontSize","editFrame","marginBottom","overflow","leftBox","backgroundColor","borderRadius","padding","rightBox","textArea","border","Flow","textOnChange","xml","array","MatchView","readOnly","AppRoutes","Route","exact","path","component","muiTheme","getMuiTheme","palette","accent1Color","deepOrange500","ReactDOM","render","BrowserRouter","MuiThemeProvider_default","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ff3cb70b.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Created by zhqmac on 2018/5/13.\n */\nvar MemoryModel = function (obj) {\n    if (obj) {\n        //类型\n        this.type = obj.type;\n        //值 数字\n        this.text = obj.text;\n    } else {\n        //类型\n        this.type = \"\";\n        //值 数字\n        this.text = \"0\";\n    }\n};\n\nMemoryModel.prototype = {\n    toString: function () {\n        var result = `<memory type=\"{0}\" text=\"{1}\" />`;\n        result = result.format(this.type,this.text);\n        return result;\n    }\n};\nexport default MemoryModel;","\nvar AnswerModel = function (obj) {\n    if (obj) {\n        //回复\n        this.answer = obj.answer;\n    } else {\n        //回复\n        this.answer  = \"\";\n    }\n};\n\nAnswerModel.prototype = {\n    toString: function () {\n        var result = `<answer>{0}</answer>>`;\n        result = result.format(this.answer);\n        return result;\n    }\n};\nexport default AnswerModel;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Answer from \"../models/AnswerModel\"\n\n\nconst styles = {\n\n    container: {\n        width: \"100%\",\n        display:\"flex\",\n    },\n    textField: {\n        height: \"100%\",\n        marginLeft: 8,\n        marginRight: 8,\n        flex:1,\n\n    },\n};\n\nclass AnswerView extends Component {\n    static propTypes = {\n        // //点击触发的方法\n        onFinish: PropTypes.func,\n    };\n    state = {\n        refs_Type: [],\n        refs_Text: [],\n        dataSource: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.textField = React.createRef();\n    }\n\n    componentWillMount() {\n\n    }\n\n    onFinishAction = (e) => {\n        if (e.keyCode === 13) {\n            let model = new Answer();\n            console.log(this.textField.current.value);\n            model.answer = this.textField.current.value;\n            console.log(\"---\",model.answer);\n            this.props.onFinish(model.toString());\n        }\n    };\n\n    render() {\n        return (\n            <div style={styles.container}>\n                <TextField\n                    id=\"type\"\n                    label=\"answer\"\n                    style={styles.textField}\n                    placeholder=\"answer\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    inputRef={this.textField}\n                    autoFocus={true}\n                    onKeyUp={this.onFinishAction}\n                />\n            </div>\n\n\n        );\n    }\n}\n\nexport default AnswerView;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport MemoryModel from \"../models/MemoryModel\";\nimport Card from \"@material-ui/core/Card\"\nimport TextField from '@material-ui/core/TextField';\nimport {CardHeader} from \"@material-ui/core\";\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReduceIcon from '@material-ui/icons/Remove'\nimport AnswerView from \"./AnswerView\"\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useTheme} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\n\n\nlet dataSource = [];\nlet refs_Key = [];\nlet refs_Value = [];\nlet tempType = \"\";\n\nconst styles = {\n    container: {\n        // background: \"red\",\n        width: \"100%\",\n        // height: \"100%\"\n    },\n    table: {\n        margin: 10,\n        // background:\"blue\",\n        // flex: 1,\n        // borderSpacing: 10,\n        // width: \"100%\",\n    },\n    item: {\n        width: \"100%\",\n        // height:24,\n        display: \"flex\",\n    },\n    formControl: {\n        margin: 8,\n        minWidth: 120,\n    },\n    textField: {\n        height: \"100%\",\n        flex: 1,\n        marginLeft: 8,\n        marginRight: 8,\n    },\n};\n\nclass MemoryView extends Component {\n    static propTypes = {\n        // //点击触发的方法\n        onFinish: PropTypes.func,\n    };\n    state = {\n        itemType: \"\",\n        showDialog: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputLabel = React.createRef();\n    }\n\n    componentWillMount() {\n        this.state.itemType = \"关键字\";\n        this.addMatch();\n    }\n\n    onFinishMemroyAction = (e) => {\n        if (e.keyCode === 13) {\n            let data = {};\n            for (var i = 0; i < refs_Key.length; i++) {\n                let textInput_Key = refs_Key[i];\n                let textInput_Value = refs_Value[i];\n                let key = textInput_Key.current.value;\n                let value = textInput_Value.current.value;\n                if (key === \"\" || value === \"\") {\n                    if (i === refs_Key.length-1){\n                        continue;\n                    }else {\n                        var msg = \"第\" + (i + 1) + \"行 \" + this.state.itemType+ \" 或 应答 不能为空 \";\n                        alert(msg);\n                        return;\n                    }\n\n                }\n                if (key in data) {\n                    let v = data[key];\n                    if (v.indexOf(value) < 0) {\n                        v.push(value);\n                    }\n                } else {\n                    let v = [];\n                    v.push(value);\n                    data[key] = v;\n                }\n            }\n            let result = {\n                \"type\": this.state.itemType,\n                \"data\": data,\n            };\n            this.props.onFinish(result);\n            let textInput_Key = refs_Key[refs_Key.length-1];\n            let textInput_Value = refs_Value[refs_Value.length-1];\n            let key = textInput_Key.current.value;\n            let value = textInput_Value.current.value;\n            if (key === \"\" || value===\"\"){\n                return;\n            }\n            this.addMatch();\n        }\n    };\n\n    addMatch = () => {\n        let textInput_Key = React.createRef();\n        refs_Key.push(textInput_Key);\n        let textInput_Value = React.createRef();\n        refs_Value.push(textInput_Value);\n        let i = refs_Key.length - 1;\n        var key = ( new Date()).valueOf();\n        dataSource.push(\n            <div key={\"match\" + key} style={styles.item}>\n                <TextField\n                    id=\"type\"\n                    label={this.state.itemType}\n                    style={styles.textField}\n                    placeholder={this.state.itemType}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    inputRef={refs_Key[i]}\n                    autoFocus={true}\n                />\n                <TextField style={styles.textField} id=\"type\"\n                           label=\"应答\"\n                           placeholder=\"应答\"\n                           margin=\"normal\"\n                           variant=\"outlined\"\n                           onKeyUp={this.onFinishMemroyAction}\n                           inputRef={refs_Value[i]}\n                />\n            </div>\n        );\n        this.setState({\n            showDialog:false,\n        })\n    };\n    addItem = () => {\n        this.addMatch();\n    };\n    deleteItem = () => {\n        refs_Key.pop();\n        refs_Value.pop();\n        dataSource.pop();\n        this.setState({});\n    };\n\n    handleSelectItem = name => event => {\n        tempType = event.target.value;\n        if (this.state.itemType !== tempType) {\n            this.setState({\n                showDialog: true,\n            })\n        }\n    };\n\n    handleClose = () => {\n        this.setState({\n            showDialog: false,\n        })\n    };\n    changeItemType = () => {\n        dataSource = [];\n        refs_Key = [];\n        refs_Value = [];\n        this.state.itemType = tempType;\n        this.addMatch();\n    };\n    // render() {\n    //     return <Card style={{width:\"50%\",height:\"150%\",background:\"red\"}}></Card>\n    // }\n\n    render() {\n        return (\n            <Card style={styles.container}>\n                <CardHeader\n                    avatar={\n                        <Avatar>\n                            Mat\n                        </Avatar>}\n                    title=\"Match\"\n                    action={\n                        <div>\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\n                                <InputLabel ref={this.inputLabel} htmlFor=\"itemType\">\n                                    itemType\n                                </InputLabel>\n                                <Select\n                                    native\n                                    value={this.state.itemType}\n                                    onChange={this.handleSelectItem('itemType')}\n                                    input={\n                                        <OutlinedInput name=\"itemType\" labelWidth={65} id=\"itemType\"/>\n                                    }\n                                >\n                                    <option value=\"关键字\">关键字</option>\n                                    <option value=\"近似句\">近似句</option>\n                                    <option value=\"语境\">语境</option>\n                                    <option value=\"开场白\">开场白</option>\n\n\n\n                                </Select>\n                            </FormControl>\n                            <IconButton aria-label=\"Add\"\n                                        onClick={this.addItem}>\n                                <AddIcon/>\n                            </IconButton>\n                            <IconButton aria-label=\"Remove\"\n                                        onClick={this.deleteItem}>\n                                <ReduceIcon/>\n                            </IconButton>\n                        </div>\n                    }\n                >\n                </CardHeader>\n                <div style={styles.table}>\n                    {dataSource}\n                </div>\n                <Dialog\n                    fullScreen={false}\n                    open={this.state.showDialog}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <DialogTitle id=\"responsive-dialog-title\">{\"更换类型\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            更换类型后，当前编辑的内容将被清空，是否继续？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\" autoFocus>\n                            取消\n                        </Button>\n                        <Button onClick={this.changeItemType} color=\"primary\" >\n                            确定\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Card>\n\n        );\n    }\n}\n\nexport default MemoryView;\n","\n\n/**\n * Created by zhqmac on 2018/5/11.\n */\nimport React, {Component} from 'react';\nimport MemoryModel from '../models/MemoryModel'\nimport MatchView from \"../views/MatchView\"\n\nconst styles = {\n    //主标签样式\n    container: {\n        display: 'flex',\n        flex: 1,\n        background: \"green\",\n        flexDirection: \"column\",\n    },\n    title: {\n        marginTop: 32,\n        textAlign: 'center',\n        color: 'red',\n        fontSize: \"24px\",\n    },\n    editFrame: {\n        marginBottom: 0,\n        marginTop: 0,\n        display: 'flex',\n        flex: 1,\n        margin: 16,\n        overflow: \"auto\",\n    },\n    leftBox: {\n        flex: 1,\n        backgroundColor: \"#ffffff6e\",\n        marginRight: 8,\n        borderRadius: 10,\n        padding: 16,\n        overflow:\"auto\",\n        // display: 'flex',\n    },\n\n    rightBox: {\n        flex: 1,\n        backgroundColor: \"#ffffff6e\",\n        marginLeft: 8,\n        borderRadius: 10,\n        padding: 16,\n    },\n    textArea: {\n        width:\"100%\",\n        height:\"100%\",\n        backgroundColor:\"transparent\",\n        border:\"aliceblue\"\n    }\n\n};\n\nclass Flow extends Component {\n    state = {\n        showDialog: false,\n        result:\"\",\n\n    };\n\n    constructor() {\n        super();\n        console.log(\"constructor\");\n    }\n\n    componentDidMount() {\n        console.log(\"DidMount\");\n    }\n\n    textOnChange = (result) => {\n        let type = result[\"type\"];\n        let data = result[\"data\"];\n        let xml = \"\";\n        for(var key in data){\n            let match = `<match type=\"{0}\" text=\"{1}\">`;\n            match = match.format(type,key);\n            let array = data[key];\n            for (let i = 0;i<array.length;i++){\n                let value = array[i];\n                let answer = \"\\t\" + ` <answer>{0}</answer>`;\n                answer = answer.format(value);\n                match = match+\"\\n\"+answer;\n            }\n            match = match + \"\\n\" + `</match>`;\n            if (xml === \"\"){\n                xml = match;\n            } else {\n                xml = xml + \"\\n\" + match;\n            }\n        }\n\n        this.setState(\n            {\n                result:xml,\n            }\n        )\n    };\n\n    render() {\n        return (\n            <div style={styles.container}>\n                <div style={styles.title}>\n                    第5维度\n                </div>\n                <div style={styles.editFrame}>\n                    <div style={styles.leftBox}>\n                        <MatchView onFinish={this.textOnChange}></MatchView>\n                    </div>\n                    <div style={styles.rightBox}>\n                        <textarea style={styles.textArea}\n                                  value={this.state.result}\n                                  readOnly={true}\n                        >\n                        </textarea>\n                    </div>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Flow;\n\n\n","/**\n * Created by zhqmac on 2018/5/11.\n */\nimport React from 'react';\nimport {\n    Route,\n} from 'react-router-dom';\nimport Flow from './controllers/Flow';\nconst styles = {\n    container: {\n        display:\"flex\",\n        flex:1,\n    },\n\n};\n\nconst AppRoutes = (\n    <div style={styles.container}>\n        <Route exact path=\"/\" component={Flow}/>\n        <Route path=\"/home\" component={Flow}/>\n    </div>\n);\n\nexport default AppRoutes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport AppRoutes from \"./AppRoutes\";\nimport {\n    BrowserRouter,\n} from 'react-router-dom';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport {deepOrange500} from 'material-ui/styles/colors';\n// import injectTapEventPlugin from 'react-tap-event-plugin';\n// injectTapEventPlugin();\nconst muiTheme = getMuiTheme({\n    palette: {\n        accent1Color: deepOrange500,\n    },\n});\nReactDOM.render(<BrowserRouter>\n    <MuiThemeProvider muiTheme={muiTheme}>\n        {AppRoutes}\n    </MuiThemeProvider>\n</BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}